---
- name: Launch EC2 instance
  hosts: localhost
  gather_facts: False
  connection: local
  vars:
    key_name: master
    instance_type: t2.nano
    security_group: ['sg-75263208']
    image: ami-6d1c2007
    region: us-east-1
    vpc_subnet_id: subnet-5d14a261
    wait_instance_minutes: 4

  tasks:
    - name: Launch instance
      ec2:
        instance_tags:
          Name: AMI
        key_name: "{{ key_name }}"
        group_id: "{{ security_group }}"
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        wait: true
        region: "{{ region }}"
        vpc_subnet_id: "{{ vpc_subnet_id  }}"
        assign_public_ip: yes
        volumes:
        - device_name: /dev/sda1
          volume_type: gp2
          volume_size: 8
          delete_on_termination: true
      register: ec2

    - name: Add new instance to launched host group
      add_host: hostname={{ item.private_ip }} groupname=launched
      with_items: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      pause: minutes="{{ wait_instance_minutes }}"

    - name: "vars ec2.instance_ids"
      debug: var=ec2.instances

    - name: "vars ec2.instance_ids"
      debug: var=ec2.instance_ids[0]

- name: Provision instance
  hosts: launched
  user: centos
  become: yes
  gather_facts: True
  roles:
    - { role:  }

- name: Create ami and terminate instance
  hosts: localhost
  connection: local
  vars:
    region: us-east-1
    image_name: AMI-{{ansible_date_time.date }}-{{ ansible_date_time.hour }}{{ ansible_date_time.minute }}{{ ansible_date_time.second }}
  tasks:
  - name: create AMI
    ec2_ami:
      instance_id: "{{ ec2.instance_ids[0] }}"
      region: "{{ region }}"
      state: present
      description: "This was provisioned {{ ansible_date_time.iso8601 }}"
      name: "{{ image_name }}"
      wait: yes
      tags:
        Name: "{{ image_name }}"
        Service: "AMI"
    register: amioutput
    when: ec2.instance_ids is defined

  - name: Terminate instances that were previously launched
    ec2:
      state: 'absent'
      region: "{{ region }}"
      instance_ids: '{{ ec2.instance_ids[0] }}'
    when: ec2.instance_ids is defined

  - name: Ami created
    debug: msg="Created {{ amioutput.image_id }}"
